@page "/_dashboard/explorer"
@layout DashboardLayout

<style>
    .scalar-container {
        position: relative;
        width: 100%;
        min-height: 600px; /* or estimated Scalar UI height */
    }

    .scalar-placeholder,
    .scalar-frame {
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        border: none;
    }

    .scalar-placeholder {
        padding: 2rem;
        text-align: center;
        font-size: 1.2rem;
        color: #888;
        background: transparent;
        z-index: 1;
        opacity: 1;
        transition: opacity 0.3s ease-in;
    }

        .scalar-placeholder.hidden {
            opacity: 0;
            pointer-events: none;
        }

    #scalarFrame {
        opacity: 0;
        transition: opacity 0.3s ease-in;
        display: block;
        border: none;
        z-index: 2;
    }

        #scalarFrame.visible {
            opacity: 1;
        }
</style>

<div class="scalar-container">
    <div class="scalar-placeholder @(_iframeVisible ? "hidden" : "")">
        Loading Scalar UI...
    </div>

    <iframe id="scalarFrame"
            src="/scalar/v1"
            class="@(_iframeVisible ? "visible" : "") scalar-frame"
            style="height: 0;">
    </iframe>
</div>

<script>
    // Resize the iframe to match its content
    window.resizeScalarFrame = function () {
        const iframe = document.getElementById("scalarFrame");
        if (!iframe) return;

        iframe.addEventListener("load", () => {
            const doc = iframe.contentDocument || iframe.contentWindow.document;
            if (!doc || !doc.body) return;

            const resize = () => {
                const height = Math.max(
                    doc.body.scrollHeight,
                    doc.documentElement.scrollHeight,
                    doc.body.offsetHeight,
                    doc.documentElement.offsetHeight
                );
                iframe.style.height = height + "px";
            };

            new ResizeObserver(resize).observe(doc.body);
            resize();

            const observer = new MutationObserver(() => {
                // Hide Scalar's internal footer
                const footer = doc.querySelector(".flex.flex-col.gap-3.p-3.border-t.darklight-reference");
                if (footer && !footer.dataset.hidden) {
                    const toggleButton = footer.querySelector("button[aria-pressed]");
                    if (toggleButton?.getAttribute("aria-pressed") === "false") {
                        toggleButton.click();
                    }
                    footer.style.display = "none";
                    footer.dataset.hidden = "true";
                }

                // Hook up Scalar's API-client buttons to scroll-to-top
                doc.querySelectorAll("button.show-api-client-button")
                   .forEach(button => {
                       if (!button.dataset.scrollHookAttached) {
                           button.dataset.scrollHookAttached = "true";
                           button.addEventListener("click", () => {
                               setTimeout(() => {
                                   window.parent.postMessage({ scrollToTop: true }, "*");
                               }, 0);
                           });
                       }
                   });
            });

            observer.observe(doc.body, { childList: true, subtree: true });
            iframe.classList.add("visible");
        });
    };

    // Scroll the main window (or .rz-body container) to top
    window.scrollToTop = function () {
        const el = document.querySelector(".rz-body");
        if (el && typeof el.scrollTo === "function") {
            el.scrollTo({ top: 0, behavior: "smooth" });
        } else {
            window.scrollTo({ top: 0, behavior: "smooth" });
        }
    };

    // Inject a floating "Back to top" button into document.body
    window.addFloatingScrollToTop = function () {
        if (document.getElementById("floatingScrollTopBtn")) return;

        const btn = document.createElement("button");
        btn.id = "floatingScrollTopBtn";
        btn.title = "Back to top";
        // Use HTML entity for an up arrow
        btn.innerHTML = "&uarr;";

        Object.assign(btn.style, {
            position: "fixed",
            bottom: "1rem",
            right: "1rem",
            zIndex: "9999",
            background: "#0078D4",
            border: "none",
            borderRadius: "50%",
            width: "3rem",
            height: "3rem",
            display: "flex",
            alignItems: "center",
            justifyContent: "center",
            color: "white",
            fontSize: "1.5rem",
            cursor: "pointer",
            boxShadow: "0 2px 6px rgba(0,0,0,0.2)",
            transition: "background 0.2s ease-in-out"
        });

        btn.addEventListener("mouseover", () => btn.style.background = "#005A9E");
        btn.addEventListener("mouseout",  () => btn.style.background = "#0078D4");
        btn.addEventListener("click",    () => window.scrollToTop());

        document.body.appendChild(btn);
    };

    // Listen for messages from the iframe
    window.addEventListener("message", (event) => {
        if (event.data?.scrollToTop) {
            window.scrollToTop();
        }
    });
</script>

@code {
    private bool _iframeVisible;

    [Inject] IJSRuntime JS { get; set; } = default!;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await JS.InvokeVoidAsync("resizeScalarFrame");

            await JS.InvokeVoidAsync("addFloatingScrollToTop");

            await Task.Delay(1500);
            _iframeVisible = true;

            StateHasChanged();
        }
    }
}
